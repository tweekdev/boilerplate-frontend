{"version":3,"sources":["tutorials/pages/UpdateTutorial.js"],"names":["toast","configure","UpdateTutorial","tuid","useParams","tutoId","auth","useContext","AuthContext","schema","Yup","shape","chanteur","required","min","link","tab","description","name","type","difficulty","instrument","useHttpClient","error","sendRequest","clearError","useState","loadedTypes","setLoadTypes","loadedDifficulty","setLoadDifficulty","loadedInstrument","setLoadInstrument","loadedTutos","setLoadTutos","useEffect","fetchTypes","a","responseData","types","fetchInstruments","instruments","fetchDifficulty","difficulties","fetchTuto","tutorials","history","useHistory","userSubmitHandler","values","actions","split","video_id","ampersandPosition","indexOf","substring","JSON","stringify","Authorization","token","isSubmitting","resetForm","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","push","console","Fragment","onClear","className","onSubmit","initialValues","file","id","validationSchema","errors","touched","handleChange","handleBlur","handleSubmit","setFieldValue","onChange","onBlur","value","placeholder","length","as","map","item","index","key","disabled"],"mappings":"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","file":"static/js/14.9404376f.chunk.js","sourcesContent":["import { Field, Formik } from 'formik';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport * as Yup from 'yup';\nimport Button from '../../shared/components/FormElements/Button';\nimport '../../shared/components/FormElements/EditPage.css';\nimport Card from '../../shared/components/UIElements/Card';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\ntoast.configure();\n\nconst UpdateTutorial = () => {\n  const tuid = useParams().tutoId;\n\n  const auth = useContext(AuthContext);\n  const schema = Yup.object().shape({\n    chanteur: Yup.string()\n      .required('Veuillez entrer un chanteur.')\n      .min(4, 'Le chanteur est trop court.'),\n    link: Yup.string().required(),\n    tab: Yup.string(),\n    description: Yup.string(),\n    name: Yup.string().required('Veuillez entrer un nom.'),\n    type: Yup.string().required('Veuillez entrer un type.'),\n    difficulty: Yup.string().required('Veuillez choisir une difficultÃ©.'),\n    instrument: Yup.string().required(),\n  });\n  const { error, sendRequest, clearError } = useHttpClient();\n  const [loadedTypes, setLoadTypes] = useState();\n  const [loadedDifficulty, setLoadDifficulty] = useState();\n  const [loadedInstrument, setLoadInstrument] = useState();\n  const [loadedTutos, setLoadTutos] = useState();\n\n  useEffect(() => {\n    const fetchTypes = async () => {\n      try {\n        const responseData = await sendRequest(`/api/tweektabs/types`);\n        setLoadTypes(responseData.types);\n      } catch (err) {}\n    };\n    const fetchInstruments = async () => {\n      try {\n        const responseData = await sendRequest(`/api/tweektabs/instruments`);\n        setLoadInstrument(responseData.instruments);\n      } catch (err) {}\n    };\n    const fetchDifficulty = async () => {\n      try {\n        const responseData = await sendRequest(`/api/tweektabs/difficulties`);\n        setLoadDifficulty(responseData.difficulties);\n      } catch (err) {}\n    };\n    const fetchTuto = async () => {\n      try {\n        const responseData = await sendRequest(\n          `/api/tweektabs/tutorials/${tuid}`\n        );\n        setLoadTutos(responseData.tutorials);\n      } catch (err) {}\n    };\n    fetchTypes();\n    fetchInstruments();\n    fetchDifficulty();\n    fetchTuto();\n  }, [sendRequest, tuid]);\n\n  const history = useHistory();\n\n  const userSubmitHandler = async (values, actions) => {\n    try {\n      if (values.link) {\n        if (values.link.split('v=')[1]) {\n          var video_id = values.link.split('v=')[1];\n          var ampersandPosition = video_id.indexOf('&');\n          if (ampersandPosition !== -1) {\n            video_id = video_id.substring(0, ampersandPosition);\n          }\n        } else {\n          var video_id = values.link;\n        }\n      }\n\n      await sendRequest(\n        `/api/tweektabs/tutorials/${tuid}`,\n        'PATCH',\n        JSON.stringify({\n          chanteur: values.chanteur,\n          link: video_id,\n          name: values.name,\n          tab: values.tab,\n          description: values.description,\n          type: values.type,\n          difficulty: values.difficulty,\n          instrument: values.instrument,\n        }),\n        {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + auth.token,\n        }\n      );\n      actions.isSubmitting = false;\n      actions.resetForm();\n      toast.success('ðŸ¦„ Tutoriel mit Ã  jour!', {\n        position: 'top-right',\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      history.push('/tutorials');\n    } catch (err) {\n      console.error(err);\n      toast.error('An error occurred!', {\n        position: 'top-right',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <div className=\"main main-edit\">\n        <Card className=\"card-edit\">\n          {loadedDifficulty && loadedTypes && loadedInstrument && loadedTutos && (\n            <>\n              <h2 className=\"title-edit\">Mettre Ã  jour</h2>\n              <Formik\n                onSubmit={userSubmitHandler}\n                initialValues={{\n                  link: loadedTutos.link,\n                  tab: loadedTutos.tab,\n                  chanteur: loadedTutos.chanteur,\n                  file: loadedTutos.file,\n                  name: loadedTutos.name,\n                  type: loadedTutos.type.id,\n                  description: loadedTutos.description,\n                  difficulty: loadedTutos.difficulty.id,\n                  instrument: loadedTutos.instrument.id,\n                }}\n                validationSchema={schema}\n              >\n                {({\n                  values,\n                  errors,\n                  touched,\n                  handleChange,\n                  handleBlur,\n                  handleSubmit,\n                  isSubmitting,\n                  setFieldValue,\n                }) => (\n                  <form onSubmit={handleSubmit} className=\"edit-form\">\n                    <div className={'form-group'}>\n                      <Field\n                        className={'edit-control'}\n                        type=\"text\"\n                        name=\"chanteur\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.chanteur}\n                        placeholder={'chanteur'}\n                      />\n                      <div className=\"error\">\n                        {errors.chanteur && touched.chanteur && errors.chanteur}\n                      </div>\n                    </div>\n                    <div className={'form-group'}>\n                      <Field\n                        className={'edit-control'}\n                        type=\"text\"\n                        name=\"name\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.name}\n                        placeholder={'Nom'}\n                      />\n                      <div className=\"error\">\n                        {errors.name && touched.name && errors.name}\n                      </div>\n                    </div>\n                    <div className={'form-group'}>\n                      <textarea\n                        className={'edit-control'}\n                        type=\"text\"\n                        name=\"description\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.description}\n                        placeholder={'Description'}\n                      />\n                      <div className=\"error\">\n                        {errors.description &&\n                          touched.description &&\n                          errors.description}\n                      </div>\n                    </div>\n                    <div className={'form-group'}>\n                      <Field\n                        name=\"link\"\n                        className=\"edit-control\"\n                        type=\"text\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        values={values.link}\n                        placeholder={'Lien video'}\n                      />\n                      <div className=\"error\">\n                        {errors.link && touched.link && errors.link}\n                      </div>\n                    </div>\n                    <div className={'form-group'}>\n                      <Field\n                        name=\"tab\"\n                        className=\"edit-control\"\n                        type=\"text\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        values={values.tab}\n                        placeholder={'Lien tablature'}\n                      />\n                      <div className=\"error\">\n                        {errors.tab && touched.tab && errors.tab}\n                      </div>\n                    </div>\n\n                    {loadedTypes && loadedTypes.length > 0 && (\n                      <div className={'form-group'}>\n                        <Field\n                          className={'edit-control'}\n                          as=\"select\"\n                          name=\"type\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          value={values.type}\n                          placeholder={'type'}\n                        >\n                          <option value=\"\">Choisit un type</option>\n                          {loadedTypes.map((item, index) => {\n                            return (\n                              <option key={index} value={item.id}>\n                                {item.name}\n                              </option>\n                            );\n                          })}\n                        </Field>\n                        <div className=\"error\">\n                          {errors.type && touched.type && errors.type}\n                        </div>\n                      </div>\n                    )}\n                    {loadedInstrument && loadedInstrument.length > 0 && (\n                      <div className={'form-group'}>\n                        <Field\n                          className={'edit-control'}\n                          as=\"select\"\n                          name=\"instrument\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          value={values.instrument}\n                          placeholder={'instrument'}\n                        >\n                          <option value=\"\">Choisit une instrument</option>\n                          {loadedInstrument.map((item, index) => {\n                            return (\n                              <option key={index} value={item.id}>\n                                {item.name}\n                              </option>\n                            );\n                          })}\n                        </Field>\n                        <div className=\"error\">\n                          {errors.instrument &&\n                            touched.instrument &&\n                            errors.instrument}\n                        </div>\n                      </div>\n                    )}\n                    {loadedDifficulty && loadedDifficulty.length > 0 && (\n                      <div className={'form-group'}>\n                        <Field\n                          className={'edit-control'}\n                          as=\"select\"\n                          name=\"difficulty\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          value={values.difficulty}\n                          placeholder={'DifficultÃ©'}\n                        >\n                          <option value=\"\">Choisit une difficultÃ©</option>\n                          {loadedDifficulty.map((item, index) => {\n                            return (\n                              <option key={index} value={item.id}>\n                                {item.name}\n                              </option>\n                            );\n                          })}\n                        </Field>\n                        <div className=\"error\">\n                          {errors.difficulty &&\n                            touched.difficulty &&\n                            errors.difficulty}\n                        </div>\n                      </div>\n                    )}\n\n                    <div className={'form-group'}>\n                      <Button type=\"submit\" disabled={isSubmitting}>\n                        Mettre Ã  jour\n                      </Button>\n                    </div>\n                  </form>\n                )}\n              </Formik>\n            </>\n          )}\n        </Card>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default UpdateTutorial;\n"],"sourceRoot":""}