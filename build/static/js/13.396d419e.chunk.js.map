{"version":3,"sources":["tabs/pages/UpdateTabs.js"],"names":["pdfjs","GlobalWorkerOptions","workerSrc","version","toast","configure","UpdateTabs","tid","useParams","tabsId","auth","useContext","AuthContext","schema","Yup","shape","chanteur","required","min","file","description","name","type","difficulty","instrument","useHttpClient","error","sendRequest","clearError","useState","loadedTypes","setLoadTypes","loadedDifficulty","setLoadDifficulty","loadedInstrument","setLoadInstrument","loadedTabs","setLoadTabs","useEffect","fetchTypes","a","responseData","types","fetchInstruments","instruments","fetchDifficulty","difficulties","fetchTab","tabs","history","useHistory","userSubmitHandler","values","actions","formData","FormData","append","Authorization","token","isSubmitting","resetForm","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","push","Fragment","onClear","className","onSubmit","initialValues","id","validationSchema","errors","touched","handleChange","handleBlur","handleSubmit","setFieldValue","onChange","onBlur","value","placeholder","event","currentTarget","files","accept","length","as","map","item","index","key","disabled"],"mappings":"wRAaAA,IAAMC,oBAAoBC,UAA1B,kDAAiFF,IAAMG,QAAvF,kBAEAC,IAAMC,YAwRSC,UAtRI,WACjB,IAAMC,EAAMC,sBAAYC,OAElBC,EAAOC,qBAAWC,KAClBC,EAASC,MAAaC,MAAM,CAChCC,SAAUF,MACPG,SAAS,gCACTC,IAAI,EAAG,+BACVC,KAAML,MACNM,YAAaN,MACbO,KAAMP,MAAaG,SAAS,2BAC5BK,KAAMR,MAAaG,SAAS,4BAC5BM,WAAYT,MAAaG,SAAS,uCAClCO,WAAYV,MAAaG,aAbJ,EAeoBQ,cAAnCC,EAfe,EAefA,MAAOC,EAfQ,EAeRA,YAAaC,EAfL,EAeKA,WAfL,EAgBaC,qBAhBb,mBAgBhBC,EAhBgB,KAgBHC,EAhBG,OAiBuBF,qBAjBvB,mBAiBhBG,EAjBgB,KAiBEC,EAjBF,OAkBuBJ,qBAlBvB,mBAkBhBK,EAlBgB,KAkBEC,EAlBF,OAmBWN,qBAnBX,mBAmBhBO,EAnBgB,KAmBJC,EAnBI,KAqBvBC,qBAAU,WACR,IAAMC,EAAU,uCAAG,4BAAAC,EAAA,+EAEYb,EAAY,wBAFxB,OAETc,EAFS,OAGfV,EAAaU,EAAaC,OAHX,uGAAH,qDAMVC,EAAgB,uCAAG,4BAAAH,EAAA,+EAEMb,EAAY,8BAFlB,OAEfc,EAFe,OAGrBN,EAAkBM,EAAaG,aAHV,uGAAH,qDAMhBC,EAAe,uCAAG,4BAAAL,EAAA,+EAEOb,EAAY,+BAFnB,OAEdc,EAFc,OAGpBR,EAAkBQ,EAAaK,cAHX,uGAAH,qDAMfC,EAAQ,uCAAG,4BAAAP,EAAA,+EAEcb,EAAY,uBAAD,OAAwBpB,IAFjD,OAEPkC,EAFO,OAGbJ,EAAYI,EAAaO,MAHZ,uGAAH,qDAMdT,IACAI,IACAE,IACAE,MACC,CAACpB,EAAapB,IAEjB,IAAM0C,EAAUC,uBAEVC,EAAiB,uCAAG,WAAOC,EAAQC,GAAf,eAAAb,EAAA,uEAEhBc,EAAW,IAAIC,UACZC,OAAO,WAAYJ,EAAOpC,UACnCsC,EAASE,OAAO,OAAQJ,EAAOjC,MAC/BmC,EAASE,OAAO,OAAQJ,EAAO/B,MAC/BiC,EAASE,OAAO,cAAeJ,EAAOhC,aACtCkC,EAASE,OAAO,OAAQJ,EAAO9B,MAC/BgC,EAASE,OAAO,aAAcJ,EAAO7B,YACrC+B,EAASE,OAAO,aAAcJ,EAAO5B,YATf,UAUhBG,EAAY,uBAAD,OAAwBpB,GAAO,QAAS+C,EAAU,CACjEG,cAAe,UAAY/C,EAAKgD,QAXZ,QAatBL,EAAQM,cAAe,EACvBN,EAAQO,YACRxD,IAAMyD,QAAQ,uDAAqC,CACjDC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAEZpB,EAAQqB,KAAK,SAxBS,kDA0BtBlE,IAAMsB,MAAM,qBAAsB,CAChCoC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAjCU,0DAAH,wDAsCvB,OACE,kBAAC,IAAME,SAAP,KACE,kBAAC,IAAD,CAAY7C,MAAOA,EAAO8C,QAAS5C,IACnC,yBAAK6C,UAAU,kBACb,kBAAC,IAAD,CAAMA,UAAU,aACbzC,GAAoBF,GAAeI,GAAoBE,GACtD,oCACE,wBAAIqC,UAAU,cAAd,oBACA,kBAAC,IAAD,CACEC,SAAUvB,EACVwB,cAAe,CACb3D,SAAUoB,EAAWpB,SACrBG,KAAMiB,EAAWjB,KACjBE,KAAMe,EAAWf,KACjBC,KAAMc,EAAWd,KAAKsD,GACtBxD,YAAagB,EAAWhB,YACxBG,WAAYa,EAAWb,WAAWqD,GAClCpD,WAAYY,EAAWZ,WAAWoD,IAEpCC,iBAAkBhE,IAEjB,gBACCuC,EADD,EACCA,OACA0B,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAvB,EAPD,EAOCA,aACAwB,EARD,EAQCA,cARD,OAUC,0BAAMT,SAAUQ,EAAcT,UAAU,aACtC,yBAAKA,UAAW,cACd,kBAAC,IAAD,CACEA,UAAW,gBACXnD,KAAK,OACLD,KAAK,WACL+D,SAAUJ,EACVK,OAAQJ,EACRK,MAAOlC,EAAOpC,SACduE,YAAa,aAEf,yBAAKd,UAAU,SACZK,EAAO9D,UAAY+D,EAAQ/D,UAAY8D,EAAO9D,WAGnD,yBAAKyD,UAAW,cACd,kBAAC,IAAD,CACEA,UAAW,eACXnD,KAAK,OACLD,KAAK,OACL+D,SAAUJ,EACVK,OAAQJ,EACRK,MAAOlC,EAAO/B,KACdkE,YAAa,QAEf,yBAAKd,UAAU,SACZK,EAAOzD,MAAQ0D,EAAQ1D,MAAQyD,EAAOzD,OAG3C,yBAAKoD,UAAW,cACd,2BACEG,GAAG,OACHvD,KAAK,OACLoD,UAAU,eACVnD,KAAK,OACL8D,SAAU,SAACI,GACTL,EAAc,OAAQK,EAAMC,cAAcC,MAAM,KAElDtC,OAAQA,EAAOjC,KACfwE,OAAO,UAIX,yBAAKlB,UAAW,cACd,8BACEA,UAAW,eACXnD,KAAK,OACLD,KAAK,cACL+D,SAAUJ,EACVK,OAAQJ,EACRK,MAAOlC,EAAOhC,YACdmE,YAAa,gBAEf,yBAAKd,UAAU,SACZK,EAAO1D,aACN2D,EAAQ3D,aACR0D,EAAO1D,cAIZU,GAAeA,EAAY8D,OAAS,GACnC,yBAAKnB,UAAW,cACd,kBAAC,IAAD,CACEA,UAAW,gBACXoB,GAAG,SACHxE,KAAK,OACL+D,SAAUJ,EACVK,OAAQJ,EACRK,MAAOlC,EAAO9B,KACdiE,YAAa,QAEb,4BAAQD,MAAM,IAAd,mBACCxD,EAAYgE,KAAI,SAACC,EAAMC,GACtB,OACE,4BAAQC,IAAKD,EAAOV,MAAOS,EAAKnB,IAC7BmB,EAAK1E,UAKd,yBAAKoD,UAAU,SACZK,EAAOxD,MAAQyD,EAAQzD,MAAQwD,EAAOxD,OAI5CY,GAAoBA,EAAiB0D,OAAS,GAC7C,yBAAKnB,UAAW,cACd,kBAAC,IAAD,CACEA,UAAW,gBACXoB,GAAG,SACHxE,KAAK,aACL+D,SAAUJ,EACVK,OAAQJ,EACRK,MAAOlC,EAAO5B,WACd+D,YAAa,cAEb,4BAAQD,MAAM,IAAd,0BACCpD,EAAiB4D,KAAI,SAACC,EAAMC,GAC3B,OACE,4BAAQC,IAAKD,EAAOV,MAAOS,EAAKnB,IAC7BmB,EAAK1E,UAKd,yBAAKoD,UAAU,SACZK,EAAOtD,YACNuD,EAAQvD,YACRsD,EAAOtD,aAIdQ,GAAoBA,EAAiB4D,OAAS,GAC7C,yBAAKnB,UAAW,cACd,kBAAC,IAAD,CACEA,UAAW,gBACXoB,GAAG,SACHxE,KAAK,aACL+D,SAAUJ,EACVK,OAAQJ,EACRK,MAAOlC,EAAO7B,WACdgE,YAAa,iBAEb,4BAAQD,MAAM,IAAd,6BACCtD,EAAiB8D,KAAI,SAACC,EAAMC,GAC3B,OACE,4BAAQC,IAAKD,EAAOV,MAAOS,EAAKnB,IAC7BmB,EAAK1E,UAKd,yBAAKoD,UAAU,SACZK,EAAOvD,YACNwD,EAAQxD,YACRuD,EAAOvD,aAIf,yBAAKkD,UAAW,cACd,kBAAC,IAAD,CAAQnD,KAAK,SAAS4E,SAAUvC,GAAhC","file":"static/js/13.396d419e.chunk.js","sourcesContent":["import { Field, Formik } from 'formik';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { pdfjs } from 'react-pdf';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport * as Yup from 'yup';\nimport Button from '../../shared/components/FormElements/Button';\nimport '../../shared/components/FormElements/EditPage.css';\nimport Card from '../../shared/components/UIElements/Card';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\ntoast.configure();\n\nconst UpdateTabs = () => {\n  const tid = useParams().tabsId;\n\n  const auth = useContext(AuthContext);\n  const schema = Yup.object().shape({\n    chanteur: Yup.string()\n      .required('Veuillez entrer un chanteur.')\n      .min(4, 'Le chanteur est trop court.'),\n    file: Yup.string(),\n    description: Yup.string(),\n    name: Yup.string().required('Veuillez entrer un nom.'),\n    type: Yup.string().required('Veuillez entrer un type.'),\n    difficulty: Yup.string().required('Veuillez choisir une difficultÃ©.'),\n    instrument: Yup.string().required(),\n  });\n  const { error, sendRequest, clearError } = useHttpClient();\n  const [loadedTypes, setLoadTypes] = useState();\n  const [loadedDifficulty, setLoadDifficulty] = useState();\n  const [loadedInstrument, setLoadInstrument] = useState();\n  const [loadedTabs, setLoadTabs] = useState();\n\n  useEffect(() => {\n    const fetchTypes = async () => {\n      try {\n        const responseData = await sendRequest(`/api/tweektabs/types`);\n        setLoadTypes(responseData.types);\n      } catch (err) {}\n    };\n    const fetchInstruments = async () => {\n      try {\n        const responseData = await sendRequest(`/api/tweektabs/instruments`);\n        setLoadInstrument(responseData.instruments);\n      } catch (err) {}\n    };\n    const fetchDifficulty = async () => {\n      try {\n        const responseData = await sendRequest(`/api/tweektabs/difficulties`);\n        setLoadDifficulty(responseData.difficulties);\n      } catch (err) {}\n    };\n    const fetchTab = async () => {\n      try {\n        const responseData = await sendRequest(`/api/tweektabs/tabs/${tid}`);\n        setLoadTabs(responseData.tabs);\n      } catch (err) {}\n    };\n    fetchTypes();\n    fetchInstruments();\n    fetchDifficulty();\n    fetchTab();\n  }, [sendRequest, tid]);\n\n  const history = useHistory();\n\n  const userSubmitHandler = async (values, actions) => {\n    try {\n      const formData = new FormData();\n      formData.append('chanteur', values.chanteur);\n      formData.append('file', values.file);\n      formData.append('name', values.name);\n      formData.append('description', values.description);\n      formData.append('type', values.type);\n      formData.append('difficulty', values.difficulty);\n      formData.append('instrument', values.instrument);\n      await sendRequest(`/api/tweektabs/tabs/${tid}`, 'PATCH', formData, {\n        Authorization: 'Bearer ' + auth.token,\n      });\n      actions.isSubmitting = false;\n      actions.resetForm();\n      toast.success('ðŸ¦„ La tab a bien Ã©tÃ© mise Ã  jour!', {\n        position: 'top-right',\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      history.push('/tabs');\n    } catch (err) {\n      toast.error('An error occurred!', {\n        position: 'top-right',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <div className=\"main main-edit\">\n        <Card className=\"card-edit\">\n          {loadedDifficulty && loadedTypes && loadedInstrument && loadedTabs && (\n            <>\n              <h2 className=\"title-edit\">Mettre Ã  jour</h2>\n              <Formik\n                onSubmit={userSubmitHandler}\n                initialValues={{\n                  chanteur: loadedTabs.chanteur,\n                  file: loadedTabs.file,\n                  name: loadedTabs.name,\n                  type: loadedTabs.type.id,\n                  description: loadedTabs.description,\n                  difficulty: loadedTabs.difficulty.id,\n                  instrument: loadedTabs.instrument.id,\n                }}\n                validationSchema={schema}\n              >\n                {({\n                  values,\n                  errors,\n                  touched,\n                  handleChange,\n                  handleBlur,\n                  handleSubmit,\n                  isSubmitting,\n                  setFieldValue,\n                }) => (\n                  <form onSubmit={handleSubmit} className=\"edit-form\">\n                    <div className={'form-group'}>\n                      <Field\n                        className={' edit-control'}\n                        type=\"text\"\n                        name=\"chanteur\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.chanteur}\n                        placeholder={'chanteur'}\n                      />\n                      <div className=\"error\">\n                        {errors.chanteur && touched.chanteur && errors.chanteur}\n                      </div>\n                    </div>\n                    <div className={'form-group'}>\n                      <Field\n                        className={'edit-control'}\n                        type=\"text\"\n                        name=\"name\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.name}\n                        placeholder={'Nom'}\n                      />\n                      <div className=\"error\">\n                        {errors.name && touched.name && errors.name}\n                      </div>\n                    </div>\n                    <div className={'form-group'}>\n                      <input\n                        id=\"file\"\n                        name=\"file\"\n                        className=\"edit-control\"\n                        type=\"file\"\n                        onChange={(event) => {\n                          setFieldValue('file', event.currentTarget.files[0]);\n                        }}\n                        values={values.file}\n                        accept=\".pdf\"\n                      />\n                    </div>\n\n                    <div className={'form-group'}>\n                      <textarea\n                        className={'edit-control'}\n                        type=\"text\"\n                        name=\"description\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.description}\n                        placeholder={'description'}\n                      />\n                      <div className=\"error\">\n                        {errors.description &&\n                          touched.description &&\n                          errors.description}\n                      </div>\n                    </div>\n\n                    {loadedTypes && loadedTypes.length > 0 && (\n                      <div className={'form-group'}>\n                        <Field\n                          className={' edit-control'}\n                          as=\"select\"\n                          name=\"type\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          value={values.type}\n                          placeholder={'type'}\n                        >\n                          <option value=\"\">Choisit un type</option>\n                          {loadedTypes.map((item, index) => {\n                            return (\n                              <option key={index} value={item.id}>\n                                {item.name}\n                              </option>\n                            );\n                          })}\n                        </Field>\n                        <div className=\"error\">\n                          {errors.type && touched.type && errors.type}\n                        </div>\n                      </div>\n                    )}\n                    {loadedInstrument && loadedInstrument.length > 0 && (\n                      <div className={'form-group'}>\n                        <Field\n                          className={' edit-control'}\n                          as=\"select\"\n                          name=\"instrument\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          value={values.instrument}\n                          placeholder={'instrument'}\n                        >\n                          <option value=\"\">Choisit une instrument</option>\n                          {loadedInstrument.map((item, index) => {\n                            return (\n                              <option key={index} value={item.id}>\n                                {item.name}\n                              </option>\n                            );\n                          })}\n                        </Field>\n                        <div className=\"error\">\n                          {errors.instrument &&\n                            touched.instrument &&\n                            errors.instrument}\n                        </div>\n                      </div>\n                    )}\n                    {loadedDifficulty && loadedDifficulty.length > 0 && (\n                      <div className={'form-group'}>\n                        <Field\n                          className={' edit-control'}\n                          as=\"select\"\n                          name=\"difficulty\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          value={values.difficulty}\n                          placeholder={'DifficultÃ©'}\n                        >\n                          <option value=\"\">Choisit une difficultÃ©</option>\n                          {loadedDifficulty.map((item, index) => {\n                            return (\n                              <option key={index} value={item.id}>\n                                {item.name}\n                              </option>\n                            );\n                          })}\n                        </Field>\n                        <div className=\"error\">\n                          {errors.difficulty &&\n                            touched.difficulty &&\n                            errors.difficulty}\n                        </div>\n                      </div>\n                    )}\n                    <div className={'form-group'}>\n                      <Button type=\"submit\" disabled={isSubmitting}>\n                        Mettre Ã  jour\n                      </Button>\n                    </div>\n                  </form>\n                )}\n              </Formik>\n            </>\n          )}\n        </Card>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default UpdateTabs;\n"],"sourceRoot":""}