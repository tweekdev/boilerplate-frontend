{"version":3,"sources":["instruments/components/ContentList.js","instruments/pages/Instrument.js"],"names":["ContentList","props","useState","searchTerm","setSeachTerm","isVisible","setIsVisible","isLoading","useHttpClient","className","items","name","type","placeholder","onChange","e","target","value","onClick","tabs","length","filter","val","toLowerCase","includes","map","tab","i","key","LoadingSpinner","asOverlay","Card","chanteur","difficulty","to","_id","tutorials","tuto","Tab","error","sendRequest","clearError","iid","useParams","loadedTab","setLoadTab","useEffect","a","responseData","instruments","fetchTutorial","ErrorModal","onClear"],"mappings":"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","file":"static/js/9.7ad35591.chunk.js","sourcesContent":["import SearchIcon from '@material-ui/icons/Search';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Card from '../../shared/components/UIElements/Card';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './ContentList.css';\nconst ContentList = (props) => {\n  const [searchTerm, setSeachTerm] = useState('');\n  const [isVisible, setIsVisible] = useState(false);\n  const { isLoading } = useHttpClient();\n\n  return (\n    <div className=\"instrument-content-id\">\n      <div className=\"descritif-instruments\">\n        <h1>\n          <strong>{props.items.name}</strong>\n        </h1>\n        <p>\n          Envie d'apprendre et maitriser de nouvelles musiques par le biais de\n          tablatures ou tutoriels ? Alors vous êtes sur le bon chemin...\n        </p>\n      </div>\n      <div className=\"header-search\">\n        {isVisible && (\n          <div className=\"search-container\">\n            <input\n              className=\"form-control search-tabs search1\"\n              type=\"text\"\n              placeholder=\"recherche\"\n              onChange={(e) => setSeachTerm(e.target.value)}\n            ></input>\n          </div>\n        )}\n        <div className=\"search-active\">\n          <button\n            className=\"btn-active-seach\"\n            onClick={() => setIsVisible(!isVisible)}\n          >\n            <SearchIcon></SearchIcon>\n          </button>\n        </div>\n      </div>\n      <div className=\"instruments-list-data\">\n        {props.items.tabs.length > 0 && (\n          <div className=\"list-instrument-datas\">\n            <div className=\"descritif-instruments-data\">\n              <h2>\n                Toutes les <strong>tabs</strong>\n              </h2>\n              <p>\n                Envie d'apprendre et maitriser de nouvelles musiques par le\n                biais de tablatures ? Alors vous êtes sur le bon chemin...\n              </p>\n            </div>\n            {props.items.tabs &&\n              props.items.tabs\n                .filter((val) => {\n                  if (searchTerm === '') {\n                    return val;\n                  } else if (\n                    val.name.toLowerCase().includes(searchTerm.toLowerCase())\n                  ) {\n                    return val;\n                  }\n                })\n                .map((tab, i) => (\n                  <div key={i} className=\"tutorials--items\">\n                    {isLoading && <LoadingSpinner asOverlay />}\n                    <Card\n                      className={`card-tutorials ${\n                        i % 2 == 0 ? 'normalize' : 'inversed'\n                      }`}\n                    >\n                      <div className=\"header\">\n                        <h3>{tab.name}</h3>\n                      </div>\n\n                      <div className=\"tutorials-item__info\">\n                        <div className=\"tutorials-data\">\n                          <label\n                            className={`${\n                              props.i % 2 === 0\n                                ? 'normalize-label'\n                                : 'inversed-label'\n                            }`}\n                          >\n                            Chanteur:\n                          </label>\n                          <h4> {tab.chanteur}</h4>\n                        </div>\n                        <div className=\"tutorials-data\">\n                          <label\n                            className={`${\n                              props.i % 2 === 0\n                                ? 'normalize-label'\n                                : 'inversed-label'\n                            }`}\n                          >\n                            Difficulty:\n                          </label>\n                          {tab.difficulty[0].name === 'easy' ? (\n                            <h4 className=\"dif easy\">\n                              {tab.difficulty[0].name}\n                            </h4>\n                          ) : tab.difficulty[0].name === 'medium' ? (\n                            <h4 className=\"dif medium\">\n                              {tab.difficulty[0].name}\n                            </h4>\n                          ) : tab.difficulty[0].name === 'hard' ? (\n                            <h4 className=\"dif hard\">\n                              {tab.difficulty[0].name}\n                            </h4>\n                          ) : null}\n                        </div>\n                        <div className=\"tutorials-data\">\n                          <label\n                            className={`${\n                              props.i % 2 === 0\n                                ? 'normalize-label'\n                                : 'inversed-label'\n                            }`}\n                          >\n                            Type:\n                          </label>\n                          <h4> {tab.type[0].name}</h4>\n                        </div>\n                      </div>\n                      <Link className=\"tutorials-choose\" to={`/tab/${tab._id}`}>\n                        <button className={`pill button  button-reverse`}>\n                          Choisir\n                        </button>\n                      </Link>\n                    </Card>\n                  </div>\n                ))}\n          </div>\n        )}\n        {props.items.tutorials.length > 0 && (\n          <div className=\"list-instrument-datas\">\n            <div className=\"descritif-instruments-data\">\n              <h2>\n                Tous les <strong>tutoriels</strong>\n              </h2>\n              <p>\n                Envie d'apprendre et maitriser de nouvelles musiques par le\n                biais de videos ou tablatures ? Alors vous êtes sur le bon\n                chemin...\n              </p>\n            </div>\n\n            {props.items.tutorials &&\n              props.items.tutorials\n                .filter((val) => {\n                  if (searchTerm === '') {\n                    return val;\n                  } else if (\n                    val.name.toLowerCase().includes(searchTerm.toLowerCase())\n                  ) {\n                    return val;\n                  }\n                })\n                .map((tuto, i) => (\n                  <div key={i} className=\"tutorials--items\">\n                    {isLoading && <LoadingSpinner asOverlay />}\n                    <Card\n                      className={`card-tutorials ${\n                        i % 2 === 0 ? 'normalize' : 'inversed'\n                      } `}\n                    >\n                      <div className=\"header\">\n                        <h3>{tuto.name}</h3>\n                      </div>\n\n                      <div className=\"tutorials-item__info\">\n                        <div className=\"tutorials-data\">\n                          <label\n                            className={`${\n                              props.i % 2 === 0\n                                ? 'normalize-label'\n                                : 'inversed-label'\n                            }`}\n                          >\n                            Chanteur:\n                          </label>\n                          <h4> {tuto.chanteur}</h4>\n                        </div>\n                        <div className=\"tutorials-data\">\n                          <label\n                            className={`${\n                              props.i % 2 === 0\n                                ? 'normalize-label'\n                                : 'inversed-label'\n                            }`}\n                          >\n                            Difficulty:\n                          </label>\n                          {tuto.difficulty[0].name === 'easy' ? (\n                            <h4 className=\"dif easy\">\n                              {tuto.difficulty[0].name}\n                            </h4>\n                          ) : tuto.difficulty[0].name === 'medium' ? (\n                            <h4 className=\"dif medium\">\n                              {tuto.difficulty[0].name}\n                            </h4>\n                          ) : tuto.difficulty[0].name === 'hard' ? (\n                            <h4 className=\"dif hard\">\n                              {tuto.difficulty[0].name}\n                            </h4>\n                          ) : null}\n                        </div>\n                        <div className=\"tutorials-data\">\n                          <label\n                            className={`${\n                              props.i % 2 === 0\n                                ? 'normalize-label'\n                                : 'inversed-label'\n                            }`}\n                          >\n                            Type:\n                          </label>\n                          <h4> {tuto.type[0].name}</h4>\n                        </div>\n                      </div>\n                      <Link\n                        className=\"tutorials-choose\"\n                        to={`/tutorial/${tuto._id}`}\n                      >\n                        <button className={`pill button  button-reverse`}>\n                          Choisir\n                        </button>\n                      </Link>\n                    </Card>\n                  </div>\n                ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ContentList;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport ContentList from '../components/ContentList';\nimport './Instrument.css';\n\nconst Tab = () => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const iid = useParams().iid;\n  const [loadedTab, setLoadTab] = useState();\n\n  useEffect(() => {\n    const fetchTutorial = async () => {\n      try {\n        const responseData = await sendRequest(\n          `/api/tweektabs/tabsTutos/${iid}`\n        );\n        setLoadTab(responseData.instruments[0]);\n      } catch (err) {}\n    };\n    fetchTutorial();\n  }, [sendRequest, iid]);\n\n  return (\n    <div className=\"main-instruments-page\">\n      <ErrorModal error={error} onClear={clearError} />\n\n      <div className=\"instrument-page\">\n        {isLoading && (\n          <div className=\"center\">\n            <LoadingSpinner></LoadingSpinner>\n          </div>\n        )}\n        {!isLoading && loadedTab && <ContentList items={loadedTab} />}\n      </div>\n    </div>\n  );\n};\n\nexport default Tab;\n"],"sourceRoot":""}