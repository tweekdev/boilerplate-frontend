{"version":3,"sources":["tutorials/components/TutorialDetail.js","tutorials/pages/Tutorial.js"],"names":["useStyles","makeStyles","theme","root","width","maxWidth","margin","spacing","small","height","large","avatar","backgroundColor","text","color","TutorialDetail","props","classes","useHttpClient","isLoading","error","clearError","className","ErrorModal","onClear","key","items","id","LoadingSpinner","asOverlay","name","chanteur","videoId","link","opts","playerVars","autoplay","onReady","event","target","pauseVideo","Card","List","ListItem","ListItemAvatar","Avatar","ListItemText","primary","secondary","Divider","variant","component","type","instrument","tab","rel","href","difficulty","creator","alt","src","picture","pseudo","description","Tab","sendRequest","tuib","useParams","tutorialId","useState","loadedTab","setLoadTab","useEffect","a","responseData","tutorials","fetchTutorial","Skeleton","animation","style","marginBottom"],"mappings":"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","file":"static/js/11.ff8fb4ee.chunk.js","sourcesContent":["import Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LibraryMusicIcon from '@material-ui/icons/LibraryMusic';\nimport MicIcon from '@material-ui/icons/Mic';\nimport StraightenOutlinedIcon from '@material-ui/icons/StraightenOutlined';\nimport React from 'react';\nimport YouTube from 'react-youtube';\nimport Card from '../../shared/components/UIElements/Card';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './TutorialDetail.css';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n  },\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n  avatar: {\n    backgroundColor: '#0F122F',\n  },\n  text: {\n    color: '#f8f8fa',\n  },\n}));\nconst TutorialDetail = (props) => {\n  const classes = useStyles();\n  const { isLoading, error, clearError } = useHttpClient();\n  const _onReady = (event) => {\n    // access to player in all event handlers via event.target\n    event.target.pauseVideo();\n  };\n  const opts = {\n    height: '500',\n    width: '100%',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1,\n    },\n  };\n\n  return (\n    <div className=\"tab-content\">\n      <div className=\"tabs-list-item\">\n        <ErrorModal error={error} onClear={clearError} />\n        <div key={props.items.id} className=\"tab-item\">\n          {isLoading && <LoadingSpinner asOverlay />}\n          <h1>\n            {props.items.name} - {props.items.chanteur}\n          </h1>\n        </div>\n      </div>\n      <div className=\"tuto-item-info\">\n        <div className=\"video\">\n          <YouTube\n            className=\"video-youtube\"\n            videoId={props.items.link} // defaults -> null\n            id={props.items.link} // defaults -> null\n            opts={opts} // defaults -> {}\n            onReady={_onReady} // defaults -> noop\n          />\n        </div>\n        <div className=\"tuto-item__info\">\n          <Card className=\"card-tuto-item-info\">\n            <List className={classes.root}>\n              <ListItem>\n                <ListItemAvatar>\n                  <Avatar className={classes.avatar}>\n                    <MicIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  className={classes.text}\n                  primary=\"Chanteur\"\n                  secondary={props.items.chanteur}\n                />\n              </ListItem>\n              <Divider variant=\"inset\" component=\"li\" />\n              <ListItem>\n                <ListItemAvatar>\n                  <Avatar className={classes.avatar}>\n                    <LibraryMusicIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  className={classes.text}\n                  primary=\"Type\"\n                  secondary={props.items.type.name}\n                />\n              </ListItem>\n              <Divider variant=\"inset\" component=\"li\" />\n              <ListItem>\n                <ListItemAvatar>\n                  <Avatar className={classes.avatar}>\n                    <StraightenOutlinedIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  className={classes.text}\n                  primary=\"Instrument\"\n                  secondary={props.items.instrument.name}\n                />\n              </ListItem>\n            </List>\n            {props.items.tab ? (\n              <div className=\"linktab\">\n                <a\n                  className=\"button\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={props.items.tab}\n                >\n                  Tablature\n                </a>\n              </div>\n            ) : null}\n          </Card>\n        </div>\n      </div>\n      <div className=\"data-bottom\">\n        <div className=\"tutorials-data-single\">\n          <label>Difficulty:</label>\n          {props.items.difficulty.name === 'easy' ? (\n            <h4 className=\"dif easy\">{props.items.difficulty.name}</h4>\n          ) : props.items.difficulty.name === 'medium' ? (\n            <h4 className=\"dif medium\">{props.items.difficulty.name}</h4>\n          ) : props.items.difficulty.name === 'hard' ? (\n            <h4 className=\"dif hard\">{props.items.difficulty.name}</h4>\n          ) : null}\n        </div>\n        {props.items.creator && (\n          <div className=\"tutorials-data-single\">\n            <div className={`${classes.root} user-head`}>\n              <Avatar\n                alt=\"picture\"\n                src={`/api/tweektabs/${props.items.creator.picture}`}\n                className={classes.small}\n              />\n            </div>\n            <div className=\"auteur\">\n              <h5>\n                Auteur: <strong>{props.items.creator.pseudo} </strong>\n              </h5>\n            </div>\n          </div>\n        )}\n      </div>\n      {props.items.description && (\n        <div className=\"description-data-single\">\n          <h2>A propos de ce tutoriel</h2>\n          <p>{props.items.description}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TutorialDetail;\n","import Skeleton from '@material-ui/lab/Skeleton';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport TutorialDetail from '../components/TutorialDetail';\nimport './Tutorial.css';\n\nconst Tab = () => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const tuib = useParams().tutorialId;\n  const [loadedTab, setLoadTab] = useState();\n\n  useEffect(() => {\n    const fetchTutorial = async () => {\n      try {\n        const responseData = await sendRequest(\n          `/api/tweektabs/tutorials/${tuib}`\n        );\n        setLoadTab(responseData.tutorials);\n      } catch (err) {}\n    };\n    fetchTutorial();\n  }, [sendRequest, tuib]);\n\n  return (\n    <div className=\"main-tutorials-single\">\n      <ErrorModal error={error} onClear={clearError} />\n\n      <div className=\"tutorial\">\n        {isLoading && (\n          <div className=\"center\">\n            <div>\n              <Skeleton\n                animation=\"wave\"\n                height={10}\n                width=\"80%\"\n                style={{ marginBottom: 6 }}\n              />\n\n              <Skeleton variant=\"rect\" width={500} height={500} />\n              <Skeleton variant=\"text\" />\n              <Skeleton variant=\"text\" />\n              <Skeleton variant=\"text\" />\n              <Skeleton variant=\"text\" />\n              <Skeleton width=\"60%\" />\n            </div>\n          </div>\n        )}\n        {!isLoading && loadedTab && <TutorialDetail items={loadedTab} />}\n      </div>\n    </div>\n  );\n};\n\nexport default Tab;\n"],"sourceRoot":""}